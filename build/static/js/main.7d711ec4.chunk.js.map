{"version":3,"sources":["components/Filter.js","components/RecordForm.js","components/Notification.js","components/Record.js","services/web.js","App.js","index.js"],"names":["Filter","value","handler","onChange","RecordForm","addRecord","nameValue","nameHandler","numberValue","numberHandler","onSubmit","type","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Record","record","deleteHandler","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","delete","console","log","put","App","useState","records","setRecords","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","showAll","setShowAll","setMessage","errorMessage","setErrorMessage","useEffect","webService","initialRecords","recordsToShow","filter","toLowerCase","indexOf","event","target","preventDefault","createFlag","forEach","index","array","window","confirm","oldObject","find","map","setTimeout","catch","error","status","JSON","stringify","newRecord","concat","idx","key","person","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d711ec4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Filter = ({value, handler}) => (\r\n  <div>\r\n    filter shown with <input value={value} onChange={handler} />\r\n  </div>\r\n)\r\n\r\n\r\nexport default Filter","import React from 'react'\r\n\r\n\r\nconst RecordForm = ({addRecord, nameValue, nameHandler, numberValue, numberHandler}) => (\r\n  <form onSubmit={addRecord}>\r\n    <div>\r\n      name: <input value={nameValue} onChange={nameHandler} />\r\n    </div>\r\n    <div>\r\n      number: <input value={numberValue} onChange={numberHandler} />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n)\r\n\r\n\r\nexport default RecordForm","import React from 'react'\r\n\r\n\r\nconst Notification = ({ message, color }) => {\r\n  const style = {\r\n    color: color,\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  }\r\n\r\n\r\n  if (message === null || message === '') {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div style={style}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\n\r\nconst Record = ({record, deleteHandler}) => {\r\n  return (\r\n    <div>\r\n      {record.name} {record.number}\r\n      <button onClick={deleteHandler}>delete</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Record","import axios from 'axios'\r\nconst baseUrl = 'https://polar-citadel-31800.herokuapp.com/api/persons'\r\n// const baseUrl = '/api/persons'\r\n// const baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl).then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject).then(response => response.data)\r\n}\r\n\r\nconst deleteRecord = id => {\r\n    return axios.delete(`${baseUrl}/${id}`).then(response => console.log(\"delete!!\", response))\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, deleteRecord, update}","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Filter from './components/Filter'\r\nimport RecordForm from './components/RecordForm'\r\nimport Notification from './components/Notification'\r\nimport Record from './components/Record'\r\nimport webService from './services/web'\r\n\r\nconst App = () => {\r\n  const [ records, setRecords ] = useState([])\r\n\r\n  const [ newName, setNewName ] = useState('')\r\n  \r\n  const [ newNumber, setNewNumber ] = useState('')\r\n\r\n  const [ newFilter, setNewFilter ] = useState('')\r\n\r\n  const [showAll, setShowAll] = useState(true)\r\n\r\n  const [message, setMessage] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  useEffect(() => {\r\n    webService\r\n      .getAll()\r\n      .then(initialRecords => {\r\n        setRecords(initialRecords)\r\n      })\r\n  }, [])\r\n\r\n  const addRecord = (event) => {\r\n    event.preventDefault()\r\n\r\n    var createFlag = true\r\n    var updateFlag = false\r\n\r\n    records.forEach(function(record, index, array) {\r\n      if (record.name === newName) {\r\n        createFlag = false\r\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n          updateFlag = true\r\n          createFlag = false\r\n          const oldObject = records.find(record => record.name === newName)\r\n          const newObject = {...oldObject, number: newNumber}\r\n          webService\r\n            .update(oldObject.id, newObject)\r\n            .then(response => {\r\n              setRecords(records.map(record => record.name === newName ? response : record))\r\n              setMessage(\r\n                `Added ${newName}`\r\n              )\r\n              setTimeout(() => {\r\n                setMessage(null)\r\n              }, 5000)\r\n            })\r\n            .catch(error => {\r\n              if (error.response.status === 400) {\r\n                setErrorMessage(\r\n                  JSON.stringify(error.response.data)\r\n                )\r\n                setTimeout(() => {\r\n                  setErrorMessage(null)\r\n                }, 5000)\r\n\r\n              } else {\r\n                setRecords(records.filter(record => record.name !== newName))\r\n                setErrorMessage(\r\n                  `Information of ${newName} has already been removed from server`\r\n                )\r\n                setTimeout(() => {\r\n                  setErrorMessage(null)\r\n                }, 5000)\r\n\r\n              }\r\n            })\r\n          \r\n        }\r\n      }\r\n    })\r\n    if (createFlag) {\r\n      const newObject = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n      webService\r\n        .create(newObject)\r\n        .then(newRecord =>{\r\n          setRecords(records.concat(newRecord))\r\n          setMessage(\r\n            `Added ${newName}`\r\n          )\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 5000)\r\n        })\r\n        .catch(error => {\r\n          console.log(\"error###\", error.response.data)\r\n          setErrorMessage(\r\n            JSON.stringify(error.response.data)\r\n          )\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 5000)\r\n        })\r\n    }\r\n\r\n\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const recordsToShow = showAll\r\n    ? records\r\n    : records.filter(record => record.name.toLowerCase().indexOf(newFilter.toLowerCase()) !== -1)\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    if ((newFilter === '' && event.target.value !== '') || (event.target.value === '' && newFilter !== '')) {\r\n      setShowAll(!showAll)\r\n    }\r\n    setNewFilter(event.target.value)\r\n  }\r\n\r\n  const deleteHandler = person => {\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n      webService\r\n        .deleteRecord(person.id)\r\n      console.log(\"alertttttt\")\r\n      setRecords(records.filter(record => record.id !== person.id))\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} color='green' />\r\n      <Notification message={errorMessage} color='red' />\r\n      <Filter value={newFilter} handler={handleFilterChange} />\r\n      <h3>add a new</h3>\r\n      <RecordForm addRecord={addRecord} nameValue={newName} nameHandler={handleNameChange} numberValue={newNumber} numberHandler={handleNumberChange} />\r\n      <h3>Numbers</h3>\r\n      <div>\r\n        {recordsToShow.map((record, idx) => <Record key={idx} record={record} deleteHandler={() => deleteHandler(record)} />)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}